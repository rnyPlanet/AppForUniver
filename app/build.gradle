apply plugin: 'com.android.application'

android {
    compileSdkVersion 29

    def versionPropsFile = file('version.properties')
    def currentVersionMajor = 0
    def currentVersionMinor = 0

    android.defaultConfig.vectorDrawables.useSupportLibrary = true

    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def fileVersionMajor = versionProps['VERSION_MAJOR'].toInteger()
        def fileVersionMinor = versionProps['VERSION_MINOR'].toInteger()
        def fileVersionBuild = versionProps['VERSION_BUILD'].toInteger() + 1

        if (fileVersionMajor != currentVersionMajor) {
            fileVersionMajor = currentVersionMajor
            fileVersionMinor = 0
            fileVersionBuild = 0
        }
        if (fileVersionMinor != currentVersionMinor) {
            fileVersionMinor = currentVersionMinor
            fileVersionBuild = 0
        }

        versionProps['VERSION_MAJOR'] = fileVersionMajor.toString()
        versionProps['VERSION_MINOR'] = fileVersionMinor.toString()
        versionProps['VERSION_BUILD'] = fileVersionBuild.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId "com.grin.appforuniver"
            minSdkVersion 19
            targetSdkVersion 29
            multiDexEnabled true
            versionCode 1
            versionName versionProps['VERSION_MAJOR'] + "." +
                    versionProps['VERSION_MINOR'] + "." +
                    versionProps['VERSION_BUILD']
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }
        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                android.applicationVariants.all { variant ->
                    variant.outputs.all {
                        outputFileName = "${applicationId}_${variant.name}-${variant.versionName}.apk"
                    }
                }
            }
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }
    viewBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'com.google.android.gms:play-services-plus:17.0.0'
    implementation 'androidx.preference:preference:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // GSON and retrofit
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'

    // Log for retrofit
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.1'
    implementation 'com.squareup.okhttp3:okhttp:4.2.1'
    implementation 'com.squareup.okhttp:okhttp-urlconnection:2.2.0'

    implementation 'com.shreyaspatil:MaterialNavigationView:1.1'

    implementation 'com.github.GrenderG:Toasty:1.4.2'

    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    implementation 'com.mikepenz:material-design-iconic-typeface:2.2.0.6-kotlin@aar'
    implementation 'com.mikepenz:fontawesome-typeface:5.9.0.0-kotlin@aar'

    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation "com.mikepenz:fastadapter:4.0.1"
    implementation "com.mikepenz:fastadapter-extensions-expandable:4.0.1"

    //The tiny Materialize library used for its useful helper classes
    implementation "com.mikepenz:materialize:1.2.1" // at least 1.2.0
    implementation "com.mikepenz:fastadapter-extensions-diff:4.0.1" // diff util helpers
    implementation "com.mikepenz:fastadapter-extensions-drag:4.0.1" // drag support
    implementation "com.mikepenz:fastadapter-extensions-scroll:4.0.1" // scroll helpers
    implementation "com.mikepenz:fastadapter-extensions-swipe:4.0.1" // swipe support
    implementation "com.mikepenz:fastadapter-extensions-ui:4.0.1" // pre-defined ui components
    implementation "com.mikepenz:fastadapter-extensions-utils:4.0.1"
    // needs the `expandable`, `drag` and `scroll` extension.

    implementation 'com.toptoche.searchablespinner:searchablespinnerlibrary:1.3.1'

    // Dependencies for HTML parsing
    implementation 'org.jsoup:jsoup:1.12.1'
    //dexter permissions
    implementation "com.karumi:dexter:5.0.0"

    implementation 'com.github.yalantis:ucrop:2.2.2'
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.navigation:navigation-fragment:2.2.2'
    implementation 'androidx.navigation:navigation-ui:2.2.2'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'android.arch.paging:runtime:1.0.1'
}
